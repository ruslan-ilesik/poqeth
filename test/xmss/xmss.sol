// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;


import {Test, console} from "forge-std/Test.sol";
import {XMSS,ADRS} from "../../src/xmss/xmss.sol";
import "forge-std/console.sol";


contract TestXMSSS is Test {
    XMSS xmss;
    function setUp() public{
        xmss = new XMSS();
    }


    function test_xmss() public{
        XMSS.PK memory a = XMSS.PK("0hd03pddYm5T0SEn", 0x3437346562633461313634336532323833616265616166343334616639333936, 0x7848694e566e73395a4b6a6135573379);
        xmss.set_pk(a);

        bytes32[] memory sig_ots;
        bytes32[] memory auth;
        
        // PLACE HOLDER START
        bytes32 M = hex"6161616161616161616161616161616161616161616161616161616161616161";
        uint8 w= 16;
        uint32 idx_sig = 0;
        bytes32 r = 0x6665653935336135323939333537353564316531323038336235356534623563;

        
        sig_ots = new bytes32[](35);
        sig_ots[0] = 0x3236653739663565376362653435346532313163613332663532313230376134;sig_ots[1] = 0x3435303036633032363565646230346534623461623933376564666636343764;sig_ots[2] = 0x3734303030353039326336343165326364393539616364643530316436656637;sig_ots[3] = 0x6131343465343139653966386665613739623939363565623564363234366530;sig_ots[4] = 0x3462343235393431616138646462386365613337333065373066383961363630;sig_ots[5] = 0x3965376361626664346630313836653666393936616235616333383432336262;sig_ots[6] = 0x3762666236363935393266306530636662656135653636353734373738316431;sig_ots[7] = 0x3636393662363734386666343938393166643936383462356464623538653636;sig_ots[8] = 0x6264333661616363363632613938343332306366376336343062316635323730;sig_ots[9] = 0x6630653637303862336339396264663834346563663437656664653331663166;sig_ots[10] = 0x3734316563643938386361393264633965303062646637613039313538303030;sig_ots[11] = 0x3336373836356335306331643461316330396636613336336433376262356434;sig_ots[12] = 0x6166326539323035393261393936643234393765353363656638333532353563;sig_ots[13] = 0x3331373537643239326263343039363862303238666465623764643935346335;sig_ots[14] = 0x6462383837376662653064663662376661646537356266643231366532343266;sig_ots[15] = 0x3935336364396630393864396438636334393362333266653438656632303936;sig_ots[16] = 0x3566663636313135323037316630653234303461393037323362653038613639;sig_ots[17] = 0x3530363837653666666633373730663136656662616333373832333334396664;sig_ots[18] = 0x6663613734643931306237636138376530316363623533303638623033376236;sig_ots[19] = 0x3736656565373333663036626365386334313730333233616466343763383063;sig_ots[20] = 0x3132383832363364313866653661383263376233643630636339356631333731;sig_ots[21] = 0x3930343736323632393832626531303261333763303466366632303733663635;sig_ots[22] = 0x6339343666316137636638633830636165386639393933393963353864323937;sig_ots[23] = 0x3532653661643731373730613635323865656662646231343230386332343036;sig_ots[24] = 0x3066313038346132363534336165653764393237303735376662393436313836;sig_ots[25] = 0x6263306265383963396436393837333361363036663461653264356664343262;sig_ots[26] = 0x3862613533363434306333653866346637626136653562623334623866393764;sig_ots[27] = 0x6431363261376133383333663233396638366462383137363035303339623235;sig_ots[28] = 0x3064333333316165383632363739386162316435623636326464326136633830;sig_ots[29] = 0x3362366465633032636661643163653938613131663239386534636139663232;sig_ots[30] = 0x6332356665646130393764343136653237643262376264626165333033646433;sig_ots[31] = 0x3163633361633665393262623936623465663837323338636166643164383134;sig_ots[32] = 0x3138643932333333333833643364383331323664353664613265373833333332;sig_ots[33] = 0x3635306631343061616237346133383262353234633432336232653231326531;sig_ots[34] = 0x3934316139396439383061383039373865356332306166323562396235396536;
    
        
        auth = new bytes32[](2);
        auth[0] = 0x6331636233643239326537383436333537666132383564346531386463616437;auth[1] = 0x6130326535346262666436613437643235386230316339306538386338613834;
    
        //console.logBytes32(0x3232663132613363343861393064656437316335323131666362373830326532);
        // PLACE HOLDER END
        console.logBytes32(sha256("hello"));
        XMSS.SIG memory Sig = XMSS.SIG(idx_sig, r,sig_ots,auth);
        xmss.verify(Sig, M, w);
    }
}